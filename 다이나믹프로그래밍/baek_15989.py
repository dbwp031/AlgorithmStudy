# 이건 하루종일 노가다 같은 느낌으로 생각하다가 결국에 dp 테이블 그리다가 점화식 비스무리한 걸 알아낸 느낌입니다.
# 점화식 비스무리한 형태가 나왔을 때, 이게 한줄 dp로 구현이 안되는데(될거같지만 어지러워질때) 너무 거기에 막혀있었던 것 같은 느낌입니다.
# 이것처럼 1,2,3 3줄로 풀어낼 수 있을때 메모리 제한이 괜찮다면 풀어헤쳐서 이해하기 쉽게 변형해주는것도 푸는데 도움이 되는 것 같습니다.
t = int(input())
dp=[[0,0,0] for _ in range(10001)]
dp[1]=[1,0,0]
dp[2]=[1,1,0]
dp[3]=[2,0,1]

for i in range(4,10001):
    dp[i][0]=sum(dp[i-1][0:])
    dp[i][1]=sum(dp[i-2][1:])
    dp[i][2]=sum(dp[i-3][2:])

for _ in range(t):
    k = int(input())
    print(sum(dp[k]))

# 오 근데 답지 코드를 보니 신기한 방법으로 풀었다.
# 각 단계별로 dp를 쫙 다해주는거다. => 1에 대한 값만 더해서 업데이트 쫙하고 => 2에 대한 값만 더해서 업데이트 쫙하고
# 생각을 해보면, 내가 한 줄 dp로 짜려고하다가 실패한 이유가 "여기부터 저기까지"의 개수만 더해줘야하는데 일단 명확히 기준이 있긴한데 그 기준이 뭔지 잘 몰랐었다.
# https://velog.io/@dhelee/%EB%B0%B1%EC%A4%80-15989%EB%B2%88-123-%EB%8D%94%ED%95%98%EA%B8%B0-4-Python-%EB%8B%A4%EC%9D%B4%EB%82%98%EB%AF%B9-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8DDP
# 위 블로그를 참고했다.

t = int(input())

# 우선 1로만 더해주는 방법이 하나씩은 있으니 1로 초기화해준다.
dp = [1] * 10001

# 이게 앞에서부터 업데이트를 해주다보니까 가능한 모든 정보가 들어가게 됐다. 진짜 신기하다. 과정을 그려논 사진을 꼭 올려야겠다.
for i in range(2, 10001):
    dp[i] += dp[i - 2]
    
for i in range(3, 10001):
    dp[i] += dp[i - 3]

for _ in range(t):
    n = int(input())
    print(dp[n])